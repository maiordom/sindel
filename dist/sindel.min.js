"use strict";
!(function (e, s, t) {
  var i = { tmpl: '<div class="sindel sindel_active"><a href="javascript:void(0)" class="sindel__box" tabindex="1"><div class="sindel__current-text"></div><div class="sindel__arrow-wrapper"><div class="sindel__arrow"></div></div></a><div class="sindel__drop"><div class="sindel__drop-inner"><ul class="sindel__majors"></ul><input class="sindel__search" type="text" tabindex="-1" /><ul class="sindel__minors"></ul></div><div class="sindel__shadow"><div class="sindel__corner sindel__corner_left"></div><div class="sindel__corner sindel__corner_right"></div><div class="sindel__corner sindel__shadow-bck "></div></div></div></div>', doTmpl: function doTmpl(e) {
      var t = document.createElement("div");return t.innerHTML = e, s(t.firstChild);
    }, forEach: function forEach(e, s, t) {
      for (var i = 0, n = e.length; n > i && s.call(t, e[i], i) !== !1; i++) {}
    }, each: function each(e, s, t) {
      for (var i = 0, n = e.length; n > i && s.call(t, e.eq(i), i) !== !1; i++) {}
    }, toArray: function toArray(e) {
      var s = [];return i.forEach(e, function (e, t) {
        s.push(e);
      }), s;
    }, cacheObjects: function cacheObjects(e) {
      var t = e,
          n = i.doTmpl(i.tmpl),
          o = i.toArray(t.get(0).getElementsByTagName("OPTION")),
          c = t.get(0).selectedIndex,
          h = { ctx: t, options: o, selected: s(o[c >= 0 ? c : 0]) },
          a = { ctx: n, search: n.find(".sindel__search"), box: n.find(".sindel__box"), drop: n.find(".sindel__drop"), currentText: n.find(".sindel__current-text"), majorsList: n.find(".sindel__majors"), minorsList: n.find(".sindel__minors"), newItems: s(), matches: s(), items: s(), selected: s(), hovered: s() };return n.insertBefore(t[0]), { select: h, chosen: a };
    }, getListTmp: function getListTmp(e, s) {
      var t = "";return i.forEach(e, function (e, i) {
        t += '<li class="sindel__item b-hidden" data-original-index="' + s + '" data-index="' + s + '">' + e.innerHTML + "</li>", s++;
      }), t;
    }, setParams: function setParams(e) {
      var t = { majorsCount: 0, minorsListOverflow: !0, searchLimit: null };return s.extend(t, e);
    } },
      n = function n(e, s) {
    return this.init(e, s), { destroy: this.destroy.bind(this), update: this.update.bind(this) };
  };n.prototype = { init: function init(e, t) {
      var n;this.doc = s(document), this.isOpen = null, this.isMouseleave = !1, this.params = {}, this.select = {}, this.chosen = {}, this.params = i.setParams(t), n = i.cacheObjects(e), this.chosen = n.chosen, this.select = n.select, this.render(this.replaceItems()), this.selectInitialItem(), this.closeWidget(), this.bindEvents();
    }, replaceItems: function replaceItems() {
      var e = this.select.options.slice(0, this.params.majorsCount),
          s = this.select.options.slice(this.params.majorsCount);return { majors: e, minors: s };
    }, render: function render(e) {
      this.chosen.majorsList.html(i.getListTmp(e.majors, 0)), this.chosen.minorsList.html(i.getListTmp(e.minors, e.majors.length)), this.chosen.items = this.chosen.ctx.find(".sindel__item"), this.chosen.box.attr("tabindex", this.select.ctx.attr("tabindex")), this.select.ctx.attr("tabindex", -1), this.chosen.search.attr("placeholder", "или введите другой"), this.chosen.search.css({ width: this.chosen.drop.outerWidth() - 18 + "px" }), this.chosen.ctx.css({ width: this.select.ctx.outerWidth() + "px" }), this.select.ctx.addClass("b-hidden"), this.params.minorsListOverflow && this.chosen.minorsList.addClass("sindel__minors_overflow"), this.params.searchLimit || (this.params.searchLimit = e.minors.length);
    }, selectInitialItem: function selectInitialItem() {
      var e;this.select.selected.length ? (e = this.select.selected.html(), i.each(this.chosen.items, function (s, t) {
        return s.html() === e ? (this.selectItem(s), !1) : void 0;
      }, this)) : this.selectByIndex(0);
    }, selectByIndex: function selectByIndex(e) {
      this.selectItem(this.chosen.items.eq(e));
    }, update: function update() {
      var e = this.select.ctx.get(0).selectedIndex;this.selectByIndex(e);
    }, bindEvents: function bindEvents() {
      this.chosen.search.on("keydown", this.onSearchKeydown.bind(this)), this.chosen.search.on("keyup", this.onSearchKeyup.bind(this)), this.chosen.search.on("blur", this.onSearchBlur.bind(this)), this.chosen.ctx.on("mouseover", this.onItemMouseover.bind(this)), this.chosen.ctx.on("mouseout", this.onItemMouseout.bind(this)), this.chosen.ctx.on("mouseenter", this.onCtxMouseenter.bind(this)), this.chosen.ctx.on("mouseleave", this.onCtxMouseleave.bind(this)), this.chosen.ctx.on("click", this.onItemClick.bind(this)), this.chosen.box.on("mousedown", this.onBoxMousedown.bind(this)), this.chosen.box.on("focus", this.onBoxFocus.bind(this));
    }, onBoxFocus: function onBoxFocus() {
      this.chosen.ctx.addClass("sindel_focus"), this.chosen.search.focus();
    }, onCtxMouseenter: function onCtxMouseenter(e) {
      this.isMouseleave = !1;
    }, onCtxMouseleave: function onCtxMouseleave(e) {
      this.isMouseleave = !0, this.isOpen ? this.chosen.search.focus() : null;
    }, onSearchKeydown: function onSearchKeydown(e) {
      if (~[27, 38, 40, 13].indexOf(e.keyCode) && !this.isOpen) return this.chosen.ctx.removeClass("sindel_focus"), void this.openWidget();switch (e.keyCode) {case 27:
          this.onEscClose();break;case 38:
          this.navigate(-1);break;case 40:
          this.navigate(1);break;case 13:
          this.selectItemByInter();}
    }, onEscClose: function onEscClose() {
      this.closeWidget();
    }, onSearchKeyup: function onSearchKeyup(e) {
      switch (e.keyCode) {case 27:case 38:case 40:case 13:
          break;default:
          this.findAndSelectMatches();}
    }, onBoxMousedown: function onBoxMousedown(e) {
      return this.doc.unbind("click.chosen"), this.chosen.ctx.removeClass("sindel_focus"), this.displayDrop(), this.doc.click(this.onDocClick.bind(this)), !1;
    }, onDocClick: function onDocClick() {
      this.isMouseleave && (this.doc.unbind("click.chosen"), this.chosen.ctx.removeClass("sindel_focus"), this.closeWidget());
    }, onSearchBlur: function onSearchBlur(e) {
      this.isMouseleave && this.closeWidget(), this.chosen.ctx.removeClass("sindel_focus");
    }, onItemClick: function onItemClick(e) {
      var t = s(e.target);t.hasClass("sindel__item") && (this.chosen.ctx.addClass("sindel_focus"), this.selectItem(t), this.closeWidget());
    }, onItemMouseover: function onItemMouseover(e) {
      var t = s(e.target);return !t.hasClass("sindel__item") || t.hasClass("b-hidden") ? !1 : void (t.hasClass("sindel__item_active") || (this.unselect(), this.chosen.hovered = t, t.addClass("sindel__item_active")));
    }, onItemMouseout: function onItemMouseout(e) {
      s(e.target).hasClass("sindel__item_active") && this.unselect();
    }, findAndSelectMatches: function findAndSelectMatches() {
      this.chosen.minorsList.get(0).scrollTop = 0, this.chosen.search.val() ? this.findSearchMatches() : this.showItems(), this.chosen.matches.length ? this.onItemMouseover({ target: this.chosen.matches[0] }) : this.unselect();
    }, unselect: function unselect() {
      this.chosen.selected.removeClass("sindel__item_active"), this.chosen.hovered.removeClass("sindel__item_active");
    }, getCurrentItem: function getCurrentItem() {
      return this.chosen.hovered.hasClass("sindel__item_active") ? this.chosen.hovered : this.chosen.selected.hasClass("sindel__item_active") ? this.chosen.selected : null;
    }, selectItemByInter: function selectItemByInter() {
      var e = this.getCurrentItem();e && this.onItemClick({ target: e.get(0) });
    }, getIndex: function getIndex(e) {
      var s = this.getCurrentItem();return s ? parseInt(s.attr("data-index"), 10) : parseInt(this.chosen.selected.attr("data-index"), 10) - 1;
    }, navigate: function navigate(e) {
      var s,
          t = this.getIndex(),
          i = t + e,
          n = this.chosen.newItems.length;this.unselect(), -1 >= i ? s = this.chosen.newItems.eq(n - 1).addClass("sindel__item_active") : n - 1 >= i ? s = this.chosen.newItems.eq(i).addClass("sindel__item_active") : i >= n && (s = this.chosen.newItems.eq(0).addClass("sindel__item_active")), this.scrollTo(s.get(0)), this.chosen.hovered = s;
    }, scrollTo: function scrollTo(e) {
      var s = this.chosen.minorsList.get(0),
          t = s.offsetHeight,
          i = s.scrollTop,
          n = t + i,
          o = e.offsetTop,
          c = o + e.offsetHeight;if (c >= n) s.scrollTop = c - t > 0 ? c - t : 0;else if (i > o) return s.scrollTop = o;
    }, findSearchMatches: function findSearchMatches() {
      var e,
          s = this.chosen.search.val().toLocaleLowerCase(),
          t = this.chosen.items.slice(this.params.majorsCount),
          n = this.params.majorsCount,
          o = [];this.chosen.newItems = this.chosen.items.slice(0, this.params.majorsCount), i.each(t, function (t, i) {
        e = t.html().toLowerCase().search(s), o.length >= this.params.searchLimit || -1 === e ? t.removeAttr("data-index").addClass("b-hidden") : e >= 0 && (o.push(t.get(0)), t.removeClass("b-hidden").attr("data-index", n++));
      }, this), this.chosen.matches = o, this.chosen.newItems = this.chosen.newItems.add(o);
    }, showItems: function showItems() {
      i.each(this.chosen.items, function (e, s) {
        s < this.params.majorsCount + this.params.searchLimit ? e.removeClass("b-hidden").attr("data-index", s) : e.removeAttr("data-index").addClass("b-hidden");
      }, this), this.chosen.newItems = this.chosen.items.slice(0, this.params.majorsCount + this.params.searchLimit), this.chosen.matches = this.chosen.items.slice(this.params.majorsCount).get();
    }, displayDrop: function displayDrop() {
      this.isOpen ? this.closeWidget() : this.openWidget();
    }, openWidget: function openWidget() {
      this.isOpen = !0, this.chosen.ctx.removeClass("sindel_focus").addClass("sindel_active"), this.showItems(), this.chosen.search.val(""), this.chosen.search.focus(), this.chosen.hovered.removeClass("sindel__item_active"), this.chosen.selected = this.chosen.selected.hasClass("b-hidden") ? this.chosen.items.eq(0) : this.chosen.selected, this.chosen.selected.addClass("sindel__item_active"), this.scrollTo(this.chosen.selected.get(0));
    }, closeWidget: function closeWidget() {
      this.isOpen = !1, this.chosen.ctx.removeClass("sindel_active");
    }, selectItem: function selectItem(e) {
      this.unselect(), this.chosen.selected = e.addClass("sindel__item_active"), this.chosen.currentText.html(this.chosen.selected.html()), this.select.ctx.get(0).selectedIndex = parseInt(this.chosen.selected.attr("data-original-index"), 10);
    }, destroy: function destroy() {
      this.doc.off("click.chosen"), this.select.ctx.removeClass("b-hidden"), this.chosen.ctx.remove();
    } }, s.fn.sindel = function (e) {
    i.each(this, function (s) {
      s.data("sindel") ? console.log("sindel already init: ", s, e) : s.data("sindel", new n(s, e || {}));
    }, this);
  };
})(window, jQuery, void 0);